{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjati\\\\Documents\\\\CS_Notts\\\\Dissertation\\\\prototype\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Preprocess the input\n  const preprocessText = text => {\n    return text.toLowerCase()\n    // preserves contractions eg. don't, can't\n    .replace(/(?!\\b\\w*'\\w*\\b)([^\\w\\s'])/g, ' $1 ') // space around non-word chars (except apostrophes in contractions)\n    .replace(/\\s+/g, ' ') // clean up extra spaces\n    .trim();\n  };\n  const handleSummarize = async () => {\n    setLoading(true);\n    try {\n      const processedText = preprocessText(inputText); // apply preprocessing\n\n      const response = await fetch(\"http://localhost:8000/api/v1/summarize/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: inputText\n        })\n      });\n      const data = await response.json();\n      setSummary(data.summary);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setSummary(\"An error occurred.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text Summarizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: inputText,\n      onChange: e => setInputText(e.target.value),\n      rows: \"10\",\n      cols: \"60\",\n      placeholder: \"Enter your text here...\",\n      style: {\n        width: '100%',\n        padding: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSummarize,\n      disabled: loading,\n      children: loading ? \"Summarizing...\" : \"Summarize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Summary:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f4f4f4',\n        padding: '1rem'\n      },\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KRqWqsOMacPGrUtY5NKqq4mWOi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","summary","setSummary","loading","setLoading","preprocessText","text","toLowerCase","replace","trim","handleSummarize","processedText","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","cols","placeholder","width","onClick","disabled","background","_c","$RefreshReg$"],"sources":["C:/Users/pjati/Documents/CS_Notts/Dissertation/prototype/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Preprocess the input\n  const preprocessText = (text) => {\n  return text\n    .toLowerCase()\n    // preserves contractions eg. don't, can't\n    .replace(/(?!\\b\\w*'\\w*\\b)([^\\w\\s'])/g, ' $1 ') // space around non-word chars (except apostrophes in contractions)\n    .replace(/\\s+/g, ' ') // clean up extra spaces\n    .trim();\n};\n\n  const handleSummarize = async () => {\n    setLoading(true);\n    try {\n      const processedText = preprocessText(inputText); // apply preprocessing\n\n      const response = await fetch(\"http://localhost:8000/api/v1/summarize/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ text: inputText }),\n      });\n\n      const data = await response.json();\n      setSummary(data.summary);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setSummary(\"An error occurred.\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ padding: '2rem', maxWidth: '600px', margin: 'auto' }}>\n      <h1>Text Summarizer</h1>\n      <textarea\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n        rows=\"10\"\n        cols=\"60\"\n        placeholder=\"Enter your text here...\"\n        style={{ width: '100%', padding: '1rem' }}\n      />\n      <br />\n      <button onClick={handleSummarize} disabled={loading}>\n        {loading ? \"Summarizing...\" : \"Summarize\"}\n      </button>\n      <h2>Summary:</h2>\n      <div style={{ background: '#f4f4f4', padding: '1rem' }}>\n        {summary}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}