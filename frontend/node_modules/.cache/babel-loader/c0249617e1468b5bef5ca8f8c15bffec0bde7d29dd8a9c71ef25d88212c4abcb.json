{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjati\\\\Documents\\\\personal_projects\\\\Text-Summarization-Prototype\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  /*\r\n  // Preprocess the input\r\n  const preprocessText = (text) => {\r\n  return text\r\n    .toLowerCase()\r\n    // preserves contractions eg. don't, can't\r\n    .replace(/(?!\\b\\w*'\\w*\\b)([^\\w\\s'])/g, ' $1 ') // space around non-word chars (except apostrophes in contractions)\r\n    .replace(/\\s+/g, ' ') // clean up extra spaces\r\n    .trim();\r\n  };\r\n  */\n\n  const handleSummarize = async () => {\n    setLoading(true);\n    try {\n      //const processedText = preprocessText(inputText); // apply preprocessing\n\n      const response = await fetch(\"http://localhost:8000/api/v1/summarize/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: inputText\n        })\n      });\n      const data = await response.json();\n      setSummary(data.summary);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setSummary(\"An error occurred.\");\n    }\n    setLoading(false);\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8000/api/v1/upload/\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setSummary(data.summary);\n    } catch (err) {\n      console.error(\"Error uploading file:\", err);\n      setSummary(\"An error occurred while processing the file.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text Summarizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload a PDF:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: inputText,\n      onChange: e => setInputText(e.target.value),\n      rows: \"10\",\n      cols: \"60\",\n      placeholder: \"Enter your text here...\",\n      style: {\n        width: '100%',\n        padding: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSummarize,\n      disabled: loading,\n      children: loading ? \"Summarizing...\" : \"Summarize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Summary:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f4f4f4',\n        padding: '1rem'\n      },\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KRqWqsOMacPGrUtY5NKqq4mWOi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","summary","setSummary","loading","setLoading","handleSummarize","response","fetch","method","headers","body","JSON","stringify","text","data","json","error","console","handleFileUpload","event","file","target","files","formData","FormData","append","err","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","value","e","rows","cols","placeholder","width","onClick","disabled","background","_c","$RefreshReg$"],"sources":["C:/Users/pjati/Documents/personal_projects/Text-Summarization-Prototype/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  /*\r\n  // Preprocess the input\r\n  const preprocessText = (text) => {\r\n  return text\r\n    .toLowerCase()\r\n    // preserves contractions eg. don't, can't\r\n    .replace(/(?!\\b\\w*'\\w*\\b)([^\\w\\s'])/g, ' $1 ') // space around non-word chars (except apostrophes in contractions)\r\n    .replace(/\\s+/g, ' ') // clean up extra spaces\r\n    .trim();\r\n};\r\n*/\r\n\r\n  const handleSummarize = async () => {\r\n    setLoading(true);\r\n    try {\r\n      //const processedText = preprocessText(inputText); // apply preprocessing\r\n\r\n      const response = await fetch(\"http://localhost:8000/api/v1/summarize/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ text: inputText }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setSummary(data.summary);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setSummary(\"An error occurred.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/api/v1/upload/\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      setSummary(data.summary);\r\n    } catch (err) {\r\n      console.error(\"Error uploading file:\", err);\r\n      setSummary(\"An error occurred while processing the file.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={{ padding: '2rem', maxWidth: '600px', margin: 'auto' }}>\r\n      <h1>Text Summarizer</h1>\r\n      \r\n      {/* PDF Upload Input */}\r\n      <h3>Upload a PDF:</h3>\r\n      <input type=\"file\" accept=\"application/pdf\" onChange={handleFileUpload} />\r\n      <br /><br />\r\n\r\n      <textarea\r\n        value={inputText}\r\n        onChange={(e) => setInputText(e.target.value)}\r\n        rows=\"10\"\r\n        cols=\"60\"\r\n        placeholder=\"Enter your text here...\"\r\n        style={{ width: '100%', padding: '1rem' }}\r\n      />\r\n      <br />\r\n      <button onClick={handleSummarize} disabled={loading}>\r\n        {loading ? \"Summarizing...\" : \"Summarize\"}\r\n      </button>\r\n      <h2>Summary:</h2>\r\n      <div style={{ background: '#f4f4f4', padding: '1rem' }}>\r\n        {summary}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}