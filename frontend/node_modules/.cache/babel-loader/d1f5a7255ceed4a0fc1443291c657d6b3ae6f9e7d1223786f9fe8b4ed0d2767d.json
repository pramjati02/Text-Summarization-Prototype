{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjati\\\\Documents\\\\personal_projects\\\\Text-Summarization-Prototype\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (file && file.type === \"application/pdf\") {\n      setSelectedFile(file);\n      setSummary(''); // clear previous summary\n    } else {\n      alert(\"Please upload a valid PDF file.\");\n    }\n  };\n  const handleSummarize = async () => {\n    if (!selectedFile) {\n      alert(\"No file selected.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8000/api/v1/summarize/\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setSummary(data.summary);\n    } catch (err) {\n      console.error(\"Error uploading file:\", err);\n      setSummary(\"An error occurred while processing the file.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PDF Summarizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSummarize,\n      disabled: !selectedFile || loading,\n      children: loading ? \"Summarizing...\" : \"Summarize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Summary:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f4f4f4',\n        padding: '1rem'\n      },\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H5vMrFqfbu9WrDU6/a1pmi3Qhes=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","summary","setSummary","loading","setLoading","handleFileSelect","event","file","target","files","type","alert","handleSummarize","formData","FormData","append","response","fetch","method","body","data","json","err","console","error","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","disabled","background","_c","$RefreshReg$"],"sources":["C:/Users/pjati/Documents/personal_projects/Text-Summarization-Prototype/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [summary, setSummary] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type === \"application/pdf\") {\r\n      setSelectedFile(file);\r\n      setSummary('');  // clear previous summary\r\n    } else {\r\n      alert(\"Please upload a valid PDF file.\");\r\n    }\r\n  };\r\n\r\n  const handleSummarize = async () => {\r\n    if (!selectedFile) {\r\n      alert(\"No file selected.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/api/v1/summarize/\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      setSummary(data.summary);\r\n    } catch (err) {\r\n      console.error(\"Error uploading file:\", err);\r\n      setSummary(\"An error occurred while processing the file.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem', maxWidth: '600px', margin: 'auto' }}>\r\n      <h1>PDF Summarizer</h1>\r\n\r\n      {/* PDF Upload */}\r\n      <input type=\"file\" accept=\"application/pdf\" onChange={handleFileSelect} />\r\n      <br /><br />\r\n\r\n      <button onClick={handleSummarize} disabled={!selectedFile || loading}>\r\n        {loading ? \"Summarizing...\" : \"Summarize\"}\r\n      </button>\r\n\r\n      <h2>Summary:</h2>\r\n      <div style={{ background: '#f4f4f4', padding: '1rem' }}>\r\n        {summary}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}